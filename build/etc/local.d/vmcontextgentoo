#!/sbin/runscript

if [[ -e /misc/cd/context.sh ]]; 
then
    source /misc/cd/context.sh
fi;

export CONFIGFILE="/etc/conf.d/net"

# Gets IP address from a given MAC
mac2ip() {
    mac=$1
    
    let ip_a=0x`echo $mac | cut -d: -f 3`
    let ip_b=0x`echo $mac | cut -d: -f 4`
    let ip_c=0x`echo $mac | cut -d: -f 5`
    let ip_d=0x`echo $mac | cut -d: -f 6`
    
    ip="$ip_a.$ip_b.$ip_c.$ip_d"
    
    echo $ip
}

# Gets the network part of an IP
get_network() {
    IP=$1   
    echo $IP | cut -d'.' -f1,2,3
}

get_interfaces() {
    IFCMD="/sbin/ifconfig -a"
    $IFCMD | grep ^eth | sed 's/ *Link encap:Ethernet.*HWaddr /-/g'
}

get_dev() {
    echo $1 | cut -d'-' -f 1
}

get_mac() {
    echo $1 | cut -d'-' -f 2
}

gen_hosts() {
    NETWORK=$1
    echo "127.0.0.1 localhost"
    for n in `seq -w 01 99`; do
        n2=`echo $n | sed 's/^0*//'`
        echo ${NETWORK}.$n2 cluster${n}
    done
}

gen_exports() {
    NETWORK=$1
    echo "/images ${NETWORK}.0/255.255.255.0(rw,async,no_subtree_check)"
}

gen_hostname() {
    MAC=$1
    NUM=`mac2ip $MAC | cut -d'.' -f4`
    NUM2=`echo 000000$NUM | sed 's/.*\(..\)/\1/'`
    echo cluster$NUM2
}

gen_interface() {
    DEV_MAC=$1
    DEV=`get_dev $DEV_MAC`
    MAC=`get_mac $DEV_MAC`
    IP=`mac2ip $MAC`
    NETWORK=`get_network $IP`
    if [[ -n $DHCP ]]; then	
	echo "config_${DEV}=\"dhcp\""
    else
	echo "config_${DEV}=\"${IP}/24\"" 
	if [ $DEV == "eth0" ]; then
 	    echo "routes_${DEV}=\"default via ${NETWORK}.1\""
	fi 
    fi
    echo ""
}


start()
{
    echo "Contexting VM"	    
    IFACES=`get_interfaces`
    rm -f ${CONFIGFILE}
    find /etc/init.d -iname "net.*" -type l | gawk '{print "rm -f "$1}' | sh
    touch ${CONFIGFILE}
    for i in $IFACES; do
	gen_interface $i >> ${CONFIGFILE}
	DEV=`get_dev $i`
	ln -s /etc/init.d/net.lo /etc/init.d/net.${DEV}
	/etc/init.d/net.${DEV} start
    done
}

stop()
{
    echo "Removing VM context"	    
    rm -f ${CONFIGFILE}
    find /etc/init.d -iname "net.*" -type l | gawk '{print "rm -f "$1}' | sh
}
